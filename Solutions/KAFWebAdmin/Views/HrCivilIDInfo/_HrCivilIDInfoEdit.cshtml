@model KAF.BusinessDataObjects.hr_civilidinfoEntity

<style>
        .form-horizontal .form-group {
            margin-right: 10px;
            margin-left: 10px;
        }
    </style>

@using (Ajax.BeginForm("", "", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "", LoadingElementId = "divProgressBar" }, new { @id = "frmCivilIDInfoEdit", @class = "form-horizontal" }))
{
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
    HtmlHelper.ClientValidationEnabled = true;
    @Html.AntiForgeryToken()
    
    <div class="panel panel-primary list-panel" id="list-panel">
        <div class="panel-heading list-panel-heading">
            @KAF.MsgContainer._hr_civilidinfo.civilidinfoUpdate
        </div>
        
        <div class="panel-body">
            <div class="modal-body">
                <div class="form-horizontal container">
                    <div class="row">
                        @Html.HiddenFor(m => m.civilid)
                        @Html.HiddenFor(m => m.hrbasicid)
                        @Html.HiddenFor(m => m.civilidfileid)
                        @Html.HiddenFor(m => m.civilidfileid_2)
                        @Html.HiddenFor(m => m.strModelPrimaryKey)
                    </div>

                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Military No (KW)", htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.militarynokw, new { htmlAttributes = new { @readonly = "readonly", @class = "militarynokw form-control" } })
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.civilidno, htmlAttributes: new { @class = "labelNormal required " })
                                @Html.EditorFor(model => model.civilidno, new { htmlAttributes = new { @class = " form-control" } })
                                @Html.ValidationMessageFor(model => model.civilidno, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.serialno, htmlAttributes: new { @class = "labelNormal required " })
                                @Html.EditorFor(model => model.serialno, new { htmlAttributes = new { @class = " form-control" } })
                                @Html.ValidationMessageFor(model => model.serialno, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.civilidissuedate, htmlAttributes: new { @class = "labelNormal   " })
                                <div class='input-group date dateonly' id='' style='width: 100 %; '>
                                    @Html.EditorFor(model => model.civilidissuedate, new { htmlAttributes = new { @Value = Model.civilidissuedate != null ? Convert.ToDateTime(Model.civilidissuedate).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.civilidissuedate, "", new { @class = "text-danger " })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.civilidexpirydate, htmlAttributes: new { @class = "labelNormal   " })
                                <div class='input-group date dateonly' id='' style='width: 100 %; '>
                                    @Html.EditorFor(model => model.civilidexpirydate, new { htmlAttributes = new { @Value = Model.civilidexpirydate != null ? Convert.ToDateTime(Model.civilidexpirydate).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.civilidexpirydate, "", new { @class = "text-danger " })
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.remarks, htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = " form-control" } })
                                @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="custom-file">
                                    <label class="custom-file-label" for="fileInput" multiple>Choose Civil Id Front Part</label>
                                    <input class="custom-file-label" id="fileInput" type="file" multiple>

                                    <table class="table" id="FilesList1">
                                        <tr>
                                            <th>
                                                Attachment(s)
                                            </th>
                                            <th>
                                                Action
                                            </th>
                                        </tr>
                                        @if (!string.IsNullOrEmpty(Model.civilidfilename))
                                        {
                                            <tr id="trfile1">
                                                <td>
                                                    @*@{ Path.Combine(@Model.civilidfilename_2, @Model.civilidextension_2)}*@
                                                    @Model.civilidfilename
                                                </td>
                                                <td>
                                                    <a href="#" onclick="DeleteFile('trfile1')"><span class='fa fa-times text-red' style="font-size: 25pt;"></span></a>
                                                    <a href="@Model.civilidfilepath" class="download" target="_blank" download><span class='fa fa-download red' style="font-size: 25pt;"></span></a>
                                                </td>
                                            </tr>
                                        }
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="custom-file">
                                    <label class="custom-file-label" for="fileInput2" multiple>Choose Civil Id Back Part</label>
                                    <input class="custom-file-label" id="fileInput2" type="file" multiple>
                                </div>
                                <table class="table" id="FilesList2">
                                    <tr>
                                        <th>
                                            Attachment(s)
                                        </th>
                                        <th>
                                            Action
                                        </th>
                                    </tr>
                                    @if (!string.IsNullOrEmpty(Model.civilidfilename_2))
                                    {
                                        <tr id="trfile2">
                                            <td>
                                                @Model.civilidfilename_2

                                            </td>
                                            <td>
                                                <a href="#" onclick="DeleteFile('trfile2')"><span class='fa fa-times text-red' style="font-size: 25pt;"></span></a>
                                                <a href="@Model.civilidfilepath_2" class="download" target="_blank" download><span class='fa fa-download red' style="font-size: 25pt;"></span></a>
                                            </td>
                                        </tr>
                                    }
                                    </table>
                            </div>
                        </div>
                    </div>
                    <div class="btn-toolbar">
                        <button type="submit" id="btnUpdateHrCivilIDInfo" class="btn btn-primary btn-md btnUpdateHrCivilIDInfo"><i class="fa fa-edit"> </i> @KAF.MsgContainer._Common._btnUpdate</button>
                        <button type="submit" id="btnModalCloseEdit" class="btn btn-danger btn-md cancel"><i class="fa fa-arrow-circle-left"> </i> @KAF.MsgContainer._Common._btnCancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<script>
//filecontrol addons

    $j('.dateonly').datetimepicker(
        {
            // format: 'L'
            format: 'DD-MM-YYYY'
        });

    function DeleteFile(Fileid) {
        $("#" + Fileid).remove();
    }
</script>






