@model KAF.BusinessDataObjects.hr_residentvisaEntity

<style>
    .form-horizontal .form-group {
        margin-right: 10px;
        margin-left: 10px;
    }
</style>

@using (Ajax.BeginForm("", "", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "", LoadingElementId = "divProgressBar" }, new { @id = "frmHr_ResidentVisaNew", @class = "form-horizontal" }))
{
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
    HtmlHelper.ClientValidationEnabled = true;
    @Html.AntiForgeryToken()

    <div class="panel panel-primary list-panel" id="list-panel">
        <div class="panel-heading list-panel-heading">
            @KAF.MsgContainer._hr_residentvisa.residentvisaCreate
        </div>

        <div class="panel-body">
            <div class="modal-body">
                <div class="form-horizontal container">
                    <div class="row">
                        @Html.HiddenFor(m => m.residentid)
                        @Html.HiddenFor(m => m.hrbasicid)
                    </div>

                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Military No (KW)", htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.militarynokw, new { htmlAttributes = new { @readonly = "readonly", @class = "militarynokw form-control" } })
                            </div>
                        </div>
                    </div>

                    <div class="row ">
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.passportid, htmlAttributes: new { @class = "labelNormal   required " })
                                @{Html.RenderAction("LoadPassportInfoByBasicId", "Common", new { area = "", selectid = "passportid", minimumInputLength = 0, delay = 250, preloaded = ViewBag.preHr_PassportInfo, basicId = Model.hrbasicid, multiple = false, isReadOnly = false, IsRequired = true });}
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.residencynumber, htmlAttributes: new { @class = "labelNormal required " })
                                @Html.EditorFor(model => model.residencynumber, new { htmlAttributes = new { @class = " form-control" } })
                                @Html.ValidationMessageFor(model => model.residencynumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.issuedate, htmlAttributes: new { @class = "labelNormal  required " })
                                <div class='input-group date dateonly' id='' style="width: 100 %; ">
                                    @Html.EditorFor(model => model.issuedate, new { htmlAttributes = new { @Value = Model.issuedate != null ? Convert.ToDateTime(Model.issuedate).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.issuedate, "", new { @class = "text-danger " })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.expirydate, htmlAttributes: new { @class = "labelNormal  required " })
                                <div class='input-group date dateonly' id='' style="width: 100 %; ">
                                    @Html.EditorFor(model => model.expirydate, new { htmlAttributes = new { @Value = Model.expirydate != null ? Convert.ToDateTime(Model.expirydate).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(m => m.expirydate, "", new { @class = "text-danger " })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="custom-file-label" for="fileupload" class="labelNormal">Choose file..</label>
                                <input type="file" id="fileupload" name="fileupload" class=" form-control" />
                            </div>
                        </div>
                    </div>
                  
                    


                    <div class="btn-toolbar">
                        <button type="submit" id="btnSaveHrResidentVisa" class="btn btn-primary btn-md btnSaveHrResidentVisa"><i class="fa fa-save"> </i> @KAF.MsgContainer._Common._btnSave</button>
                        <button type="submit" id="btnModalCloseNew" class="btn btn-danger btn-md cancel"><i class="fa fa-arrow-circle-left"> </i> @KAF.MsgContainer._Common._btnCancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<script>
//filecontrol addons
 @*var fileobject = @Html.Raw(Json.Encode(Model.cor_foldercontentsList));


    $('.footable').footable({
	     calculateWidthOverride: function () {
		     return { width: $(window).width() }
	     }
    })



    $(document).ready(function () {
        $('#filedescriptionupld').kaffileUploader({
            _tableid: 'tbl_filedescription',
            _colname: 'filedescription',
            _tabname: 'Hr_ResidentVisa',
            _fileuploadbuttontext: 'Upload files',
            _modelid: 'File_upload_for__Document',
            _modeltext: 'File upload for  Document',
            _fileinputname: 'inpfilefiledescription',
            _containeruploadpreview: 'filedescriptionuploadpreview',
            _containerdeletebuttontext: '@KAF.MsgContainer._Common._btnDelete',
            _ismultiple: false,
            _fileobject: fileobject

        });
    });*@


 $j('.dateonly').datetimepicker(
        {
            // format: 'L'
            format: 'DD-MM-YYYY'
        });
</script>




