@model KAF.BusinessDataObjects.hr_residentvisaEntity

<style>
        .form-horizontal .form-group {
            margin-right: 10px;
            margin-left: 10px;
        }
    </style>

@using (Ajax.BeginForm("", "", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "", LoadingElementId = "divProgressBar" }, new { @id = "frmHr_ResidentVisaDetail", @class = "form-horizontal" }))
{
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
    HtmlHelper.ClientValidationEnabled = true;
    @Html.AntiForgeryToken()
    
    <div class="panel panel-primary list-panel" id="list-panel">
        <div class="panel-heading list-panel-heading">
            @KAF.MsgContainer._hr_residentvisa.residentvisaDetails
        </div>
        
        <div class="panel-body">
            <div class="modal-body">
                <div class="form-horizontal container">
                    <div class="row">
                        @Html.HiddenFor(m => m.residentid)
                        @Html.HiddenFor(m => m.hrbasicid)

                        @Html.HiddenFor(m => m.strModelPrimaryKey)
                    </div>
                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Military No (KW)", htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.militarynokw, new { htmlAttributes = new { @readonly = "readonly", @class = "militarynokw form-control" } })
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.passportid, htmlAttributes: new { @class = "labelNormal   required " })
                                @{Html.RenderAction("LoadPassportInfoByBasicId", "Common", new { area = "", selectid = "passportid", minimumInputLength = 0, delay = 250, preloaded = ViewBag.preHr_PassportInfo, basicId = Model.hrbasicid, multiple = false, isReadOnly = true, IsRequired = true });}
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.residencynumber, htmlAttributes: new { @class = "labelNormal required " })
                                @Html.EditorFor(model => model.residencynumber, new { htmlAttributes = new { @readonly = "readonly", @class = " form-control" } })
                                @Html.ValidationMessageFor(model => model.residencynumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.issuedate, htmlAttributes: new { @class = "labelNormal  required " })
                                <div class='input-group date dateonly' id='' style="width: 100 %; ">
                                    @Html.EditorFor(model => model.issuedate, new { htmlAttributes = new { @readonly = "readonly", @Value = Model.issuedate != null ? Convert.ToDateTime(Model.issuedate).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
                                </div>
                                @Html.ValidationMessageFor(m => m.issuedate, "", new { @class = "text-danger " })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.expirydate, htmlAttributes: new { @class = "labelNormal  required " })
                                <div class='input-group date dateonly' id='' style="width: 100 %; ">
                                    @Html.EditorFor(model => model.expirydate, new { htmlAttributes = new { @readonly = "readonly", @Value = Model.expirydate != null ? Convert.ToDateTime(Model.expirydate).ToString("dd-MM-yyyy") : null, @class = "form-control", @type = "text" } })
                                </div>
                                @Html.ValidationMessageFor(m => m.expirydate, "", new { @class = "text-danger " })
                            </div>
                        </div>
                    </div>
                    @*<div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.isfamilyvisa, htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.isfamilyvisa, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.isfamilyvisa, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.filedescription, htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.filedescription, new { htmlAttributes = new { @readonly = "readonly", @class = " form-control" } })
                                @Html.ValidationMessageFor(model => model.filedescription, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div id="filedescription"></div>
                            </div>
                        </div>
                    </div>

                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.filepath, htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.filepath, new { htmlAttributes = new { @readonly = "readonly", @class = " form-control" } })
                                @Html.ValidationMessageFor(model => model.filepath, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.filename, htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.filename, new { htmlAttributes = new { @readonly = "readonly", @class = " form-control" } })
                                @Html.ValidationMessageFor(model => model.filename, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.filetype, htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.filetype, new { htmlAttributes = new { @readonly = "readonly", @class = " form-control" } })
                                @Html.ValidationMessageFor(model => model.filetype, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.extension, htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.extension, new { htmlAttributes = new { @readonly = "readonly", @class = " form-control" } })
                                @Html.ValidationMessageFor(model => model.extension, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row ">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.fileno, htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.fileno, new { htmlAttributes = new { @readonly = "readonly", @class = " form-control" } })
                                @Html.ValidationMessageFor(model => model.fileno, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.remarks, htmlAttributes: new { @class = "labelNormal  " })
                                @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @readonly = "readonly", @class = " form-control" } })
                                @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@
                    <div class="btn-toolbar">
                        <button type="submit" id="btnModalCloseDetail" class="btn btn-danger btn-md cancel"><i class="fa fa-arrow-circle-left"> </i> @KAF.MsgContainer._Common._btnCancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>
@*//filecontrol addons
 var fileobject = @Html.Raw(Json.Encode(Model.cor_foldercontentsList));


$('.footable').footable({
	 calculateWidthOverride: function () {
		 return { width: $(window).width() };
	 }
});



$(document).ready(function () {
	 var _filedescriptionupld = $('#filedescriptionupld').kaffileUploader({
		 _tableid: 'tbl_filedescription', 
		 _colname: 'filedescription',
		 _tabname: 'Hr_ResidentVisa',
		 _fileuploadbuttontext: 'Upload files',
		 _modelid: 'File_upload_for__Document',
		 _modeltext: 'File upload for  Document',
		 _fileinputname: 'inpfilefiledescription',
		 _containeruploadpreview: 'filedescriptionuploadpreview',
		 _containerdeletebuttontext: '',
		 _ismultiple: true,
		 _fileobject: fileobject

		 _filedescriptionupld.loadpreloaddata(fileobject, $("#filedescriptionuploadpreview"), '', 'filedescription');

});*@

</script>
    



